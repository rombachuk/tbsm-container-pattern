
createTemplate(
"BSM_DiscoveredNodes", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_DiscoveredNodes", 
"An instance of this template holds all the Nodes that are discovered underneath it. This is a place holder basically so that you dont see all the clutter of having all the nodes."
);

addUserPreferencesForTemplate(
"BSM_DiscoveredNodes", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_WebsphereCluster", 
"server_farm_svg.gif"
);

setTemplateDescription(
"BSM_WebsphereCluster", 
"Represents the websphere cluster instances. It inherits the concept of BSM_AppCluster template"
);

addUserPreferencesForTemplate(
"BSM_WebsphereCluster", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_AppServerCluster", 
"rack_server_farm_svg.gif"
);

setTemplateDescription(
"BSM_AppServerCluster", 
"Similar to the BSM_AppServer except that now it represents an AppServer cluster."
);

addUserPreferencesForTemplate(
"BSM_AppServerCluster", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Switch", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_Switch", 
"MAC level switches"
);

addUserPreferencesForTemplate(
"BSM_Switch", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level2service3", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level2service3", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level2service3", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level2service3", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"level1service3", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level1service3", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level1service3", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level1service3", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"SCR_TopLevelAggregateTemplate", 
"cloud_svg.gif"
);

setTemplateDescription(
"SCR_TopLevelAggregateTemplate", 
"Instances of this template will act as the aggregate service instances for a set of top level objects. For example AllDatabases service instance is an aggregation of all the databases in the Service Component Repository"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenPolicy.1", 
"ESDA_Custom_SCC_TOPLEVEL_Down_1"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenRuleName.1", 
"ESDA_GetTopLevelAggregatedServiceInstances"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"primarytemplatefilter", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenDisplayNameExpression.1", 
"label"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenInstanceNameExpression.1", 
"radinstanceid"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenAttributeList.1", 
"AllOrgNodeFields"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"SendInstanceToSCR", 
"false"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"classnamefilter", 
"'cdm:sys.ComputerSystem'"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"DisableChildren_PersistifyInstanceIfParentIsPersistent", 
"true"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenQueryDataType.1", 
"TBSMComponentRegistry"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"othertemplatefilter", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenDescriptionExpression.1", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenPrimaryTag.1", 
"6"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenPolicyCondition.1", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenIsEnabled.1", 
"true"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenQuery.1", 
"select * from scc_relations where id=0;"
);

addUserPreferencesForTemplate(
"SCR_TopLevelAggregateTemplate", 
"ESDA_ChildrenMemberTags.1", 
"6"
);

createTemplate(
"BSM_ApplicationCluster", 
"server_farm_svg.gif"
);

setTemplateDescription(
"BSM_ApplicationCluster", 
"An application running in a clustered environment"
);

addUserPreferencesForTemplate(
"BSM_ApplicationCluster", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"SCR_RootTemplate", 
"cloud_svg.gif"
);

setTemplateDescription(
"SCR_RootTemplate", 
"This is the root Template for all the templates related to the Service Component Repository"
);

addUserPreferencesForTemplate(
"SCR_RootTemplate", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

addUserPreferencesForTemplate(
"SCR_RootTemplate", 
"SendInstanceToSCR", 
"false"
);

createTemplate(
"BSM_BatchJob", 
"cash_svg.gif"
);

setTemplateDescription(
"BSM_BatchJob", 
"Z Batch Job"
);

addUserPreferencesForTemplate(
"BSM_BatchJob", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SpecializationTemplates", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_SpecializationTemplates", 
"This lists the templates that are related to a particular technology. For example the Oracle version of the BSM_Database template will have BSM_OracleDatabase template. In order to avoid any confusion on the dependency structure of these templates away from what their generic counterparts mean, we dont make dependency relations between these templates."
);

addUserPreferencesForTemplate(
"BSM_SpecializationTemplates", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_NetworkService", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_NetworkService", 
"Service instances of resources that provide network connectivity services."
);

addUserPreferencesForTemplate(
"BSM_NetworkService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_IMS", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_IMS", 
"IMS"
);

addUserPreferencesForTemplate(
"BSM_IMS", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_DNSService", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_DNSService", 
"Service instances that provide DNS services."
);

addUserPreferencesForTemplate(
"BSM_DNSService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SOAOperationPort", 
"cash_svg.gif"
);

setTemplateDescription(
"BSM_SOAOperationPort", 
"Service Oriented Architecture component representing Operations and Ports combinations"
);

addUserPreferencesForTemplate(
"BSM_SOAOperationPort", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_JavaServer", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_JavaServer", 
"AppServer representing a Java Server"
);

addUserPreferencesForTemplate(
"BSM_JavaServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_BusinessApplication", 
"blocks_svg.gif"
);

setTemplateDescription(
"BSM_BusinessApplication", 
"High level business applications"
);

addUserPreferencesForTemplate(
"BSM_BusinessApplication", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

addUserPreferencesForTemplate(
"BSM_BusinessApplication", 
"ServiceExport", 
"cdm:app.Application"
);

createTemplate(
"BSM_TableSpace", 
"database_svg.gif"
);

setTemplateDescription(
"BSM_TableSpace", 
"Represents a table space in a particular database."
);

addUserPreferencesForTemplate(
"BSM_TableSpace", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_TerminalServer", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_TerminalServer", 
"Service instance that provides terminal server services."
);

addUserPreferencesForTemplate(
"BSM_TerminalServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level3overview", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL4S4", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL2S3", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL1S3", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL2S2", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL1S2", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL2S1", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL2S3", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL1S1", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level3overview", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL1S3", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL2S2", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL1S2", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL2S1", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL4S4", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL1S1", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL2", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL2", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDescription_NumBadL1", 
""
);

addUserPreferencesForTemplate(
"level3overview", 
"RuleDisplayName_NumBadL1", 
""
);

createTemplate(
"BSM_MSSQLDatabase", 
"database_svg.gif"
);

setTemplateDescription(
"BSM_MSSQLDatabase", 
"Represents instances of the MSSQL database. It inherits the concepts of BSM_Database template"
);

addUserPreferencesForTemplate(
"BSM_MSSQLDatabase", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_LoadBalancer", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_LoadBalancer", 
"Service instance that provides load balancer services."
);

addUserPreferencesForTemplate(
"BSM_LoadBalancer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Printer", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_Printer", 
"Service instance that provides printer services."
);

addUserPreferencesForTemplate(
"BSM_Printer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_HTTP", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_HTTP", 
"HTTP Servers"
);

addUserPreferencesForTemplate(
"BSM_HTTP", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_J2EEApplication", 
"cash_svg.gif"
);

setTemplateDescription(
"BSM_J2EEApplication", 
"Applications that run on J2EE servers and other web servers."
);

addUserPreferencesForTemplate(
"BSM_J2EEApplication", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_IBMApplication", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_IBMApplication", 
"AppServer representing an IBM application"
);

addUserPreferencesForTemplate(
"BSM_IBMApplication", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Node", 
"server_svg.gif"
);

setTemplateDescription(
"BSM_Node", 
"This represents a computer system (Node) on which app servers are run."
);

addUserPreferencesForTemplate(
"BSM_Node", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Application", 
"cash_svg.gif"
);

setTemplateDescription(
"BSM_Application", 
"Customer application based on off-the shelve software application."
);

addUserPreferencesForTemplate(
"BSM_Application", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_DHCPService", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_DHCPService", 
"Service instances that provide DHCP services."
);

addUserPreferencesForTemplate(
"BSM_DHCPService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_OracleDatabaseServer", 
"db_farm_svg.gif"
);

setTemplateDescription(
"BSM_OracleDatabaseServer", 
"Represents an Oracle database server. Inherits the cocnepts of BSM_DatabaseServer"
);

addUserPreferencesForTemplate(
"BSM_OracleDatabaseServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Service", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_Service", 
"Services"
);

addUserPreferencesForTemplate(
"BSM_Service", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_LDAPService", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_LDAPService", 
"Service instances that provide LDAP services."
);

addUserPreferencesForTemplate(
"BSM_LDAPService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_FCSwitch", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_FCSwitch", 
"Storage Switch"
);

addUserPreferencesForTemplate(
"BSM_FCSwitch", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Bridge", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_Bridge", 
"Service instances that provide Layer 2 bridging network services."
);

addUserPreferencesForTemplate(
"BSM_Bridge", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level1overview", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level1overview", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level1overview", 
"RuleDisplayName_NumBadL1S3", 
""
);

addUserPreferencesForTemplate(
"level1overview", 
"RuleDisplayName_NumBadL1S2", 
""
);

addUserPreferencesForTemplate(
"level1overview", 
"RuleDisplayName_NumBadL1S1", 
""
);

addUserPreferencesForTemplate(
"level1overview", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level1overview", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

addUserPreferencesForTemplate(
"level1overview", 
"RuleDescription_NumBadL1S3", 
""
);

addUserPreferencesForTemplate(
"level1overview", 
"RuleDescription_NumBadL1S2", 
""
);

addUserPreferencesForTemplate(
"level1overview", 
"RuleDescription_NumBadL1S1", 
""
);

createTemplate(
"BSM_WindowsService", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_WindowsService", 
"AppServer representing a Windows service"
);

addUserPreferencesForTemplate(
"BSM_WindowsService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_CustomApplication", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_CustomApplication", 
"AppServer representing a custom server Application"
);

addUserPreferencesForTemplate(
"BSM_CustomApplication", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SybaseDatabase", 
"database_svg.gif"
);

setTemplateDescription(
"BSM_SybaseDatabase", 
"Represents an instance of the Sybase database. Inherits the concept of the BSM_Database template"
);

addUserPreferencesForTemplate(
"BSM_SybaseDatabase", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_NetworkElement", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_NetworkElement", 
"Service instances of this template model for generic network elements."
);

addUserPreferencesForTemplate(
"BSM_NetworkElement", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SharePointWebApplication", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_SharePointWebApplication", 
"SharePoint Web Application"
);

addUserPreferencesForTemplate(
"BSM_SharePointWebApplication", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_AppLogicalGrouping", 
"db_farm_svg.gif"
);

setTemplateDescription(
"BSM_AppLogicalGrouping", 
"Grouping similar instances of applications not providing a business service, just administratively grouped.  e.g. Domino servers with same functionality in Asia"
);

addUserPreferencesForTemplate(
"BSM_AppLogicalGrouping", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SiebelComponent", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_SiebelComponent", 
"Siebel Software Component"
);

addUserPreferencesForTemplate(
"BSM_SiebelComponent", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"cloud_svg.gif"
);

setTemplateDescription(
"SCR_TopLevelOrphanAggregateTemplate", 
"Instances of this template will consist of SCR objects that have lost a parent and are no longer under the Imported Business Service."
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenPolicy.1", 
"ESDA_Custom_SCC_TopLevelOrphan_Down_1"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenRuleName.1", 
"ESDA_GetTopLevelOrphanAggregatedServiceInstances"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"primarytemplatefilter", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenDisplayNameExpression.1", 
"label"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenInstanceNameExpression.1", 
"radinstanceid"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenAttributeList.1", 
"AllOrgNodeFields"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"classnamefilter", 
"'cdm:sys.ComputerSystem'"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"SendInstanceToSCR", 
"false"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"DisableChildren_PersistifyInstanceIfParentIsPersistent", 
"true"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenQueryDataType.1", 
"TBSMComponentRegistry"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"othertemplatefilter", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenDescriptionExpression.1", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenPrimaryTag.1", 
"6"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenPolicyCondition.1", 
""
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenIsEnabled.1", 
"true"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenQuery.1", 
"select * from scc_relations where id=0;"
);

addUserPreferencesForTemplate(
"SCR_TopLevelOrphanAggregateTemplate", 
"ESDA_ChildrenMemberTags.1", 
"6"
);

createTemplate(
"level2service2", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level2service2", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level2service2", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level2service2", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"BSM_Router", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_Router", 
"Service instances that provide Layer 3 routing services."
);

addUserPreferencesForTemplate(
"BSM_Router", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_WebServicePort", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_WebServicePort", 
"Web Service Ports"
);

addUserPreferencesForTemplate(
"BSM_WebServicePort", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level2service1", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level2service1", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level2service1", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level2service1", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"BSM_AppServerGroup", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_AppServerGroup", 
"Used for non-clustered groups such as Websphere cells"
);

addUserPreferencesForTemplate(
"BSM_AppServerGroup", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_MSSQLDatabaseServer", 
"db_farm_svg.gif"
);

setTemplateDescription(
"BSM_MSSQLDatabaseServer", 
"Represents an instance of the MSSQL database server. Inherits the concepts of the BSM_DatabaseServer template"
);

addUserPreferencesForTemplate(
"BSM_MSSQLDatabaseServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Node_Z", 
"server_svg.gif"
);

setTemplateDescription(
"BSM_Node_Z", 
"Z Computer Systems"
);

addUserPreferencesForTemplate(
"BSM_Node_Z", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_StorageSubsystem", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_StorageSubsystem", 
"Storage Subsystems"
);

addUserPreferencesForTemplate(
"BSM_StorageSubsystem", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level4overview", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level4overview", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level4overview", 
"RuleDescription_NumBadL3", 
""
);

addUserPreferencesForTemplate(
"level4overview", 
"RuleDisplayName_NumBadL3", 
""
);

addUserPreferencesForTemplate(
"level4overview", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level4overview", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"BSM_StorageVolume", 
"database_svg.gif"
);

setTemplateDescription(
"BSM_StorageVolume", 
"Storage Volumes"
);

addUserPreferencesForTemplate(
"BSM_StorageVolume", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level2overview", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_NumBadL2S3", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_NumBadL1S3", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_NumBadL2S2", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_NumBadL1S2", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_NumBadL2S1", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_NumBadL2S3", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_NumBadL1S1", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level2overview", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_NumBadL1S3", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_NumBadL2S2", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_NumBadL1S2", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_NumBadL2S1", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_NumBadL1S1", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_NumBadL1", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDisplayName_NumBadL1", 
""
);

addUserPreferencesForTemplate(
"level2overview", 
"RuleDescription_", 
""
);

createTemplate(
"BSM_SharePointServer", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_SharePointServer", 
"SharePoint Server"
);

addUserPreferencesForTemplate(
"BSM_SharePointServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_WebService", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_WebService", 
"Web Services"
);

addUserPreferencesForTemplate(
"BSM_WebService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_DatabaseServer", 
"database_svg.gif"
);

setTemplateDescription(
"BSM_DatabaseServer", 
"Represents a DatabaseServer and might carry lot of characteristics similar to an AppServer, in the sense that it supports a particular application. Example is an OracleDatabase server. Ideally we should have this template inherit from AppServer."
);

addUserPreferencesForTemplate(
"BSM_DatabaseServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SMTPService", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_SMTPService", 
"Service instances that provide SMTP services."
);

addUserPreferencesForTemplate(
"BSM_SMTPService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_CICS", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_CICS", 
"CICS Regions"
);

addUserPreferencesForTemplate(
"BSM_CICS", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_NFSService", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_NFSService", 
"Service instances that provide NFS services."
);

addUserPreferencesForTemplate(
"BSM_NFSService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Fabric", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_Fabric", 
"Storage Fabric"
);

addUserPreferencesForTemplate(
"BSM_Fabric", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_GenericTemplates", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_GenericTemplates", 
"PlaceHolder templates for all the generic templates needed for the BSM"
);

addUserPreferencesForTemplate(
"BSM_GenericTemplates", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level3service4", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level3service4", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level3service4", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level3service4", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"level1service1", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level1service1", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level1service1", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level1service1", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"BSM_DB2DatabaseServer", 
"db_farm_svg.gif"
);

setTemplateDescription(
"BSM_DB2DatabaseServer", 
"Represents a DB2 database server. Should inherit the concepts of the BSM_DatabaseServer template"
);

addUserPreferencesForTemplate(
"BSM_DB2DatabaseServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_BizTalkMessageBox", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_BizTalkMessageBox", 
"BizTalk Message Box"
);

addUserPreferencesForTemplate(
"BSM_BizTalkMessageBox", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_UnixService", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_UnixService", 
"AppServer representing an Unix service or daemon"
);

addUserPreferencesForTemplate(
"BSM_UnixService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_BizTalkServer", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_BizTalkServer", 
"BizTalk Server"
);

addUserPreferencesForTemplate(
"BSM_BizTalkServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SharedServiceProvider", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_SharedServiceProvider", 
"SharePoint Service Provider"
);

addUserPreferencesForTemplate(
"BSM_SharedServiceProvider", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_OracleDatabase", 
"database_svg.gif"
);

setTemplateDescription(
"BSM_OracleDatabase", 
"Represents an Oracle database. Shoud inherit the concepts of the BSM_Database template"
);

addUserPreferencesForTemplate(
"BSM_OracleDatabase", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_ManagementApplication", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_ManagementApplication", 
"AppServer representing a system management application"
);

addUserPreferencesForTemplate(
"BSM_ManagementApplication", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_J2EEServer", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_J2EEServer", 
"J2EE Server"
);

addUserPreferencesForTemplate(
"BSM_J2EEServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"level1service2", 
"cloud_svg.gif"
);

addUserPreferencesForTemplate(
"level1service2", 
"PRIV_1:tbsmViewTemplate", 
"tbsmUsers"
);

addUserPreferencesForTemplate(
"level1service2", 
"PRIV_0:tbsmTemplateAdmin", 
"tbsmadmin"
);

addUserPreferencesForTemplate(
"level1service2", 
"PRIV_1:TAG_tbsmViewService", 
"tbsmViewAllServicesUsers"
);

createTemplate(
"BSM_BusinessService", 
"blocks_svg.gif"
);

setTemplateDescription(
"BSM_BusinessService", 
"High level business service made of different types of instances/applications serving one business purpose. e.g. mail routing"
);

addUserPreferencesForTemplate(
"BSM_BusinessService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

addUserPreferencesForTemplate(
"BSM_BusinessService", 
"ServiceExport", 
"cdm:sys.BusinessSystem"
);

createTemplate(
"BSM_Firewall", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_Firewall", 
"Service instance that provides firewall services."
);

addUserPreferencesForTemplate(
"BSM_Firewall", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SOAProcess", 
"cash_svg.gif"
);

setTemplateDescription(
"BSM_SOAProcess", 
"Service Oriented Architecture components"
);

addUserPreferencesForTemplate(
"BSM_SOAProcess", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"cloud_svg.gif"
);

setTemplateDescription(
"SCR_RetrieveDependentObjectsTemplate", 
"Service instances of this template will have the ESDA rule which enables them to retrieve the dependent objects on which they depend on. When this ESDA rule present is invoked it will further result in instances of this same template and the recursive retrieval can then be extended."
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ImportAllDescendants", 
"true"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"SyncTagsWithPolicy", 
"true"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_SelfIsEnabled.1", 
"true"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ForceValidationWhenInvalidated", 
"WHEN_PERSISTED"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsDescriptionExpression.1", 
""
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenDisplayNameExpression.1", 
"label"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsPolicy.1", 
"ESDA_Custom_SCC_ESDA_Parent_RETRIEVE_up_1"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenAttributeList.1", 
"AllOrgNodeFields"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_SelfInstanceRefreshPolicy.1", 
"SCR_GET_SEED_EVENTIDS_AND_PROPERTIES"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsInstanceNameExpression.1", 
"radinstanceid"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsDisplayNameExpression.1", 
"label"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenDescriptionExpression.1", 
""
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"InvalidationPeriodSecs", 
"86400"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsQueryDataType.1", 
"TBSMComponentRegistry"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsAttributeList.1", 
"AllOrgNodeFields"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenPolicy.1", 
"ESDA_Custom_SCC_ESDA_CHILD_RETRIEVE_Down_1"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenRuleName.1", 
"ESDA_GetComponentRegistryRelations"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsQuery.1", 
"select * from scc_relations where id=0;"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsPolicyCondition.1", 
""
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsMemberTags.1", 
"6"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenInstanceNameExpression.1", 
"radinstanceid"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenQueryDataType.1", 
"TBSMComponentRegistry"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"PersistifyAutopopInstances", 
"false"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenPolicyCondition.1", 
"dependency_cnt <> '0'"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsIsEnabled.1", 
"false"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"PersistifyInstanceIfParentIsPersistent", 
"true"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenIsEnabled.1", 
"true"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ParentsRuleName.1", 
"ESDA_GetComponentRegistryRelations"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenQuery.1", 
"select * from scc_relations where id=0;"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"LifeTimeSecs", 
"96400"
);

addUserPreferencesForTemplate(
"SCR_RetrieveDependentObjectsTemplate", 
"ESDA_ChildrenMemberTags.1", 
"6"
);

createTemplate(
"BSM_AppServer", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_AppServer", 
"Off-the shelve packaged software application including all sub-applications, e.g. Domino application, Websphere application"
);

addUserPreferencesForTemplate(
"BSM_AppServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SiebelServer", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_SiebelServer", 
"Siebel Server"
);

addUserPreferencesForTemplate(
"BSM_SiebelServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_Database", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_Database", 
"A particular database instance. This is at the same level as a BSM_Application. In db terminology this is similar to a db instance which has tables etc."
);

addUserPreferencesForTemplate(
"BSM_Database", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_StartedTask", 
"cash_svg.gif"
);

setTemplateDescription(
"BSM_StartedTask", 
"Z Started Task"
);

addUserPreferencesForTemplate(
"BSM_StartedTask", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_DB2Database", 
"database_svg.gif"
);

setTemplateDescription(
"BSM_DB2Database", 
"This represents a DB2 database and hence should inherit the features of the BSM_Database template."
);

addUserPreferencesForTemplate(
"BSM_DB2Database", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_WeblogicCluster", 
"server_farm_svg.gif"
);

setTemplateDescription(
"BSM_WeblogicCluster", 
"Represents the clustered weblogic server. Inherits the concepts of BSM_AppCluster"
);

addUserPreferencesForTemplate(
"BSM_WeblogicCluster", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_NetworkRootCause", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_NetworkRootCause", 
"Network root cause as determined by Precision or other Root cause engine, might be several layers beneath the Generic_Network_Entry_Point "
);

addUserPreferencesForTemplate(
"BSM_NetworkRootCause", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_BizTalkHost", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_BizTalkHost", 
"BizTalk Host"
);

addUserPreferencesForTemplate(
"BSM_BizTalkHost", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"SCR_ServiceComponentRawStatusTemplate", 
"cloud_svg.gif"
);

setTemplateDescription(
"SCR_ServiceComponentRawStatusTemplate", 
"All the service component objects will be instances of this template in addition to the original ESDA template such as SCR_RetrieveDependetObjectsTemplate. This template will provide the raw attribute service status for this service component"
);

addNewRawAttribute(
"SCR_ServiceComponentRawStatusTemplate", 
"ComponentRawEventStatusRule", 
new String[] { "IBM Tivoli Monitoring(87722)","Tivoli Application Dependency Discovery Manager(87721)","Predictive Events(89300)","MTTrapd(300)","TME10tecad(6601)","Precision [Start](8000)","Default Class(0)","Precision [End](8049)","IBM Tivoli Monitoring Agent(87723)","TPC Rules(89200)" }, 
new String[] { "BSM_Identity" }, 
0, 
"ObjectServer"
);

addRawAttributeThresholdSet(
"SCR_ServiceComponentRawStatusTemplate", 
"ComponentRawEventStatusRule", 
"Bad", 
null, 
new String[] { "Severity" }, 
new String[] { ">=" }, 
new String[] { "4" }, 
0
);

addRawAttributeThresholdSet(
"SCR_ServiceComponentRawStatusTemplate", 
"ComponentRawEventStatusRule", 
"Marginal", 
null, 
new String[] { "Severity" }, 
new String[] { ">=" }, 
new String[] { "3" }, 
0
);

addUserPreferencesForTemplate(
"SCR_ServiceComponentRawStatusTemplate", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_ClusterGroup", 
"rack_server_farm_svg.gif"
);

setTemplateDescription(
"BSM_ClusterGroup", 
"Logical grouping clustered systems"
);

addUserPreferencesForTemplate(
"BSM_ClusterGroup", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_DiscoveredAppServerClusters", 
"db_farm_svg.gif"
);

setTemplateDescription(
"BSM_DiscoveredAppServerClusters", 
"An instance of this template holds all the discovered appserver cluster instances"
);

addUserPreferencesForTemplate(
"BSM_DiscoveredAppServerClusters", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SMBService", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_SMBService", 
"Service instances that provide SMB services."
);

addUserPreferencesForTemplate(
"BSM_SMBService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_NetworkFabric", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_NetworkFabric", 
"Provides network connectivity for attached blades and chassis."
);

addUserPreferencesForTemplate(
"BSM_NetworkFabric", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SybaseDatabaseServer", 
"db_farm_svg.gif"
);

setTemplateDescription(
"BSM_SybaseDatabaseServer", 
"Represents instances of the Sybase database server. Inherits the concept of the BSM_DatabaseServer template"
);

addUserPreferencesForTemplate(
"BSM_SybaseDatabaseServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_WebsphereServer", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_WebsphereServer", 
"Represents the Websphere server instance. Inherits the concepts of the BSM_AppServer template"
);

addUserPreferencesForTemplate(
"BSM_WebsphereServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_NetworkEntryPoint", 
"router_svg.gif"
);

setTemplateDescription(
"BSM_NetworkEntryPoint", 
"First hop from the Computer_System into the network. e.g. Switch port"
);

addUserPreferencesForTemplate(
"BSM_NetworkEntryPoint", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_StorageTemplates", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_StorageTemplates", 
"All the storage related modeling templates will be in this group"
);

addUserPreferencesForTemplate(
"BSM_StorageTemplates", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_WeblogicServer", 
"bridge_svg.gif"
);

setTemplateDescription(
"BSM_WeblogicServer", 
"Represents instances of Weblogic servers. It inherits the concepts of BSM_AppServer templates"
);

addUserPreferencesForTemplate(
"BSM_WeblogicServer", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SOAService", 
"cash_svg.gif"
);

setTemplateDescription(
"BSM_SOAService", 
"Service Oriented Architecture component"
);

addUserPreferencesForTemplate(
"BSM_SOAService", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_NetworkTemplates", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_NetworkTemplates", 
"All the Network modeling related templates will be in this group"
);

addUserPreferencesForTemplate(
"BSM_NetworkTemplates", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_BizTalkHostInstance", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_BizTalkHostInstance", 
"BizTalk Host Instance Service"
);

addUserPreferencesForTemplate(
"BSM_BizTalkHostInstance", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_ServerBlade", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_ServerBlade", 
"Blade server, physical hardware."
);

addUserPreferencesForTemplate(
"BSM_ServerBlade", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_SiebelGateway", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_SiebelGateway", 
"Siebel Gateway"
);

addUserPreferencesForTemplate(
"BSM_SiebelGateway", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_ServerChassis", 
"cloud_svg.gif"
);

setTemplateDescription(
"BSM_ServerChassis", 
"Server chassis or rack."
);

addUserPreferencesForTemplate(
"BSM_ServerChassis", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

createTemplate(
"BSM_ServerCluster", 
"rack_server_farm_svg.gif"
);

setTemplateDescription(
"BSM_ServerCluster", 
"Clustered computer systems - this one needs work."
);

addUserPreferencesForTemplate(
"BSM_ServerCluster", 
"PRIV_0:tbsmTemplateAdmin", 
"impactadmin"
);

addNumericFunctionsPolicy(
"//******************************************************* {COPYRIGHT-TOP-RM} ***ENDLINE// Licensed Materials - Property of IBMENDLINE//ENDLINE// \"Restricted Materials of IBM\"ENDLINE//ENDLINE// 5724-C51ENDLINE//ENDLINE// (C) Copyright IBM Corp. 2011 All Rights Reserved.ENDLINE//ENDLINE// US Government Users Restricted Rights - Use, duplication, orENDLINE// disclosure restricted by GSA ADP Schedule Contract with IBM Corp.ENDLINE//******************************************************* {COPYRIGHT-END-RM} ***ENDLINE/* This policy contains a list of functions that can be ENDLINE   used to calculate the status of the attribute. YouENDLINE   can create new functions by following the format of the ENDLINE   existing ones- namely, they should be in the form ENDLINE   of function X(ChildrenStatusArray, AllChildrenArray, ENDLINE	 ServiceInstance, Status) { <functionBody >}.ENDLINE   The job of the function is to set the Status variable toENDLINE   a number that RAD will use for the value of this attribute.ENDLINE   The input values are as follows:ENDLINE   ChildrenStatusArray: an array of numbers for the statuses ofENDLINE   the child attribute of child instances of the child template.ENDLINE   (the child attribute and child template are configured in thisENDLINE   attribute).ENDLINE   AllChildrenArray: an array of ServiceInstance objects of all ENDLINE   children of the instance being calculated which belong to theENDLINE   child template configured in this attribute. Any attribute ofENDLINE   these child instances can be accessed by ENDLINE   AllChildrenArray[i].StateModelNode.<AttributeName>.Value, whereENDLINE   you must provide the attribute name.ENDLINE   ServiceInstance: the ServiceInstance object whose attribute valueENDLINE   is being calculatedENDLINE   Status: the variable you must set in the policyENDLINE*/ENDLINEENDLINEENDLINE/**ENDLINE This function calculates the Standard Deviation of the ChildENDLINE attributes ENDLINE*/ENDLINEfunction StandardDeviation(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status) {ENDLINE i = 0;ENDLINE Sum = 0;ENDLINE NumChildren = 0;ENDLINE Average = 0;ENDLINE // first find the average of the valuesENDLINE while (ChildrenStatusArray[i] <> NULL) {ENDLINE   Sum = Sum + ChildrenStatusArray[i];ENDLINE   NumChildren = NumChildren + 1;ENDLINE   i = i + 1;ENDLINE }ENDLINE if (NumChildren > 0) {ENDLINE   Average = Sum / NumChildren;ENDLINE }ENDLINEENDLINE // Now find the variance of the valuesENDLINE i = 0;ENDLINE SumOfDifferenceFromMeanSquared = 0;ENDLINE while (ChildrenStatusArray[i] <> NULL) {ENDLINE   DifferenceFromMean = ChildrenStatusArray[i] - Average;ENDLINE   DifferenceFromMeanSquared = DifferenceFromMean * DifferenceFromMean;ENDLINE   SumOfDifferenceFromMeanSquared = SumOfDifferenceFromMeanSquared + DifferenceFromMeanSquared;ENDLINE   i = i + 1;ENDLINE }ENDLINE Variance = 0;ENDLINE if (NumChildren > 0) {ENDLINE  Variance = SumOfDifferenceFromMeanSquared / NumChildren;ENDLINE }ENDLINE StandardDeviation = sqrt(Variance);ENDLINE Status = StandardDeviation;ENDLINE}ENDLINEENDLINE/**ENDLINE This function returns the number of children whose child attributeENDLINE is Bad (equal to 5). This function is intended to be used whenENDLINE the child attribute configured is OverallAttributeENDLINE*/ENDLINEfunction NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status) {ENDLINE i = 0;ENDLINE Count = 0;ENDLINE while (ChildrenStatusArray[i] <> NULL) {ENDLINE   if (ChildrenStatusArray[i] = 5) {ENDLINE     Count = Count + 1;ENDLINE   }ENDLINE  i = i + 1;ENDLINE }ENDLINE Status = Count;ENDLINE}ENDLINEENDLINEENDLINE/**ENDLINE* Status will be 5 if any required child is Bad or if all Optional children are BadENDLINE* Status will be 3 if worst required child is Marginal or if any but not all optional children are BadENDLINE* Otherwise status will be 0ENDLINE*/ENDLINEfunction StatusOfChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status) {ENDLINE   i = 0;ENDLINE   Status = 0;ENDLINE   BadOptional = false;ENDLINE   NonBadOptional = false;ENDLINE   ParentName = ServiceInstance.serviceinstancename;ENDLINE   while (AllChildrenArray[i] <> NULL) {ENDLINE      ENDLINE      ChildInstance = AllChildrenArray[i];ENDLINE        ChildStatus =  ChildInstance.StateModelNode.OverallAttribute.Value; // OverallAttribute of childENDLINE      ChildType = \"Required\";ENDLINE      parent1name = ChildInstance.parent1name;ENDLINE       log(\"ParentName is \" + ParentName + \" and parent1name of child is \" + parent1name);ENDLINE      if (parent1name = ParentName) {ENDLINE           log(\"OK we match\");ENDLINE          if (ChildInstance.parent1value = \"Optional\") {ENDLINE             ChildType = \"Optional\"; ENDLINE                log(\"OK we're optional\");ENDLINE         }ENDLINE      }ENDLINE     parent2name = ChildInstance.parent2name;ENDLINE      if (parent2name = ParentName) {ENDLINE          if (ChildInstance.parent2value = \"Optional\") {ENDLINE             ChildType = \"Optional\"; ENDLINE         }ENDLINE      }ENDLINE     parent3name = ChildInstance.parent3name;ENDLINE      if (parent3name = ParentName) {ENDLINE          if (ChildInstance.parent3value = \"Optional\") {ENDLINE             ChildType = \"Optional\"; ENDLINE         }ENDLINE      }ENDLINE    parent4name = ChildInstance.parent4name;ENDLINE      if (parent4name = ParentName) {ENDLINE          if (ChildInstance.parent4value = \"Optional\") {ENDLINE             ChildType = \"Optional\"; ENDLINE         }ENDLINE      }ENDLINE      if (ChildStatus = 5 and ChildType = \"Required\") {ENDLINE         Status = 5;ENDLINE       }ENDLINE       if (ChildStatus = 3 and ChildType = \"Required\") {ENDLINE         if (Status < 3) {ENDLINE             Status = 3;ENDLINE          }ENDLINE       }ENDLINE       if (ChildStatus = 5 and ChildType = \"Optional\") {ENDLINE              log(\"Chidl is bad and type is optional\");ENDLINE           if (Status < 3) {ENDLINE              Status = 3;ENDLINE           }ENDLINE           BadOptional = true;ENDLINE       }ENDLINE         log(\"ChildStatus is \" + ChildStatus + \" and ChildType is \" + ChildType + \" and childname is \" + ChildInstance.serviceinstancename);ENDLINE       if (ChildType = \"Optional\" and ChildStatus < 5) {ENDLINE           NonBadOptional = true;ENDLINE        }ENDLINE       ENDLINE       i = i + 1;ENDLINE   }ENDLINEENDLINE   if (BadOptional = true and NonBadOptional = false) {ENDLINE     // all optional children are badENDLINE      Status = 5;ENDLINE   }ENDLINE  ENDLINE}ENDLINEENDLINEENDLINEENDLINEENDLINE"
);

addWorstChildDependencyAttributeToTemplate(
"BSM_DiscoveredNodes", 
"BSM_Node", 
"AllDependentNodesRule", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_AppServerCluster", 
"BSM_AppServer", 
"AppServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_AppServerCluster", 
"BSM_AppServerGroup", 
"BSM_AppServerCluster_To_BSM_AppServerGroup", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"SCR_TopLevelAggregateTemplate", 
"SCR_RetrieveDependentObjectsTemplate", 
"scctoplevelnext", 
"Bad", 
"Marginal", 
true
);

addPercentageOfChildrenDependencyAttributeToTemplate(
"BSM_ApplicationCluster", 
"BSM_Application", 
"Business_Application_MarginalStatus", 
"Marginal", 
70, 
30, 
true, 
"", 
50
);

addPercentageOfChildrenDependencyAttributeToTemplate(
"BSM_ApplicationCluster", 
"BSM_Application", 
"Business_Application_BadStatus", 
"Bad", 
99, 
51, 
true, 
"", 
50
);

addWorstChildDependencyAttributeToTemplate(
"SCR_RootTemplate", 
"SCR_TopLevelAggregateTemplate", 
"scctoplevelnodes", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"SCR_RootTemplate", 
"SCR_ServiceComponentRawStatusTemplate", 
"DEP_SCC_Status", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"SCR_RootTemplate", 
"SCR_TopLevelOrphanAggregateTemplate", 
"DEP_SCC_StatusOrph", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_BatchJob", 
"BatchJobWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_StartedTask", 
"StartedTaskWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_HTTP", 
"HTTPWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_J2EEServer", 
"J2EEServersWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_J2EEApplication", 
"J2EEAppSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SOAProcess", 
"SOAAppSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SOAService", 
"SOAServiceSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_CICS", 
"CICSWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_IMS", 
"IMSWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_Node_Z", 
"zNodesWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_DB2DatabaseServer", 
"DB2DatabaseServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_DB2Database", 
"DB2DatabaseWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_MSSQLDatabaseServer", 
"MSSQLDatabaseServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_MSSQLDatabase", 
"MSSQLDatabaseWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_OracleDatabaseServer", 
"OracleDatabaseServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_OracleDatabase", 
"OracleDatabaseWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SybaseDatabaseServer", 
"SybaseDatabaseServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SybaseDatabase", 
"SybaseDatabaseWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_WeblogicCluster", 
"WeblogicClusterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_WeblogicServer", 
"WeblogicServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_WebsphereCluster", 
"WebsphereClusterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_WebsphereServer", 
"WebsphereServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_WebService", 
"WebServiceSpecialWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_WebServicePort", 
"WebServicePortSpecialWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_IBMApplication", 
"IBMApplicationAppSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_ManagementApplication", 
"ManagementApplicationAppSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_CustomApplication", 
"CustomApplicationAppSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_UnixService", 
"UnixServiceWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_WindowsService", 
"WindowsServiceWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_JavaServer", 
"JavaWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SiebelComponent", 
"SiebelCompSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SiebelGateway", 
"SiebelGateSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SiebelServer", 
"SiebelSrvSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SharePointServer", 
"SharePointServerSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SharePointWebApplication", 
"SharePointWebApplSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_SharedServiceProvider", 
"SharedSvcProviderSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_BizTalkServer", 
"BizTalkServerSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_BizTalkHost", 
"BizTalkHostSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_BizTalkHostInstance", 
"BizTalkHostInstanceSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SpecializationTemplates", 
"BSM_BizTalkMessageBox", 
"BizTalkMessageBoxSpecWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SOAOperationPort", 
"BSM_J2EEServer", 
"BSM_SOAOperPorttoJ2EE", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessApplication", 
"BSM_Application", 
"BusApp_ApplicationDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessApplication", 
"BSM_ApplicationCluster", 
"BusApp_AppClusterDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessApplication", 
"BSM_AppLogicalGrouping", 
"BusApp_AppLogicalGroupingDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessApplication", 
"BSM_AppServer", 
"BusApp_AppServerDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessApplication", 
"BSM_BusinessService", 
"BusApp_BusinessServiceDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessApplication", 
"BSM_BusinessApplication", 
"BusApp_BusinessApplicationDependency", 
"Bad", 
"Marginal", 
true
);

addPolicyDependencyAttributeToTemplate(
"level1overview", 
"level1service1", 
"OverallAttribute", 
"NumBadL1S1", 
"PolicyAttribute_level1overview_NumBadL1S127", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addSumAttributeToTemplate(
"level2overview", 
"level1overview", 
"NumBadL1S1", 
"NumBadL1S1"
);

addSumAttributeToTemplate(
"level3overview", 
"level2overview", 
"NumBadL1S1", 
"NumBadL1S1"
);

addPolicyDependencyAttributeToTemplate(
"level1overview", 
"level1service2", 
"OverallAttribute", 
"NumBadL1S2", 
"PolicyAttribute_level1overview_NumBadL1S228", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addSumAttributeToTemplate(
"level2overview", 
"level1overview", 
"NumBadL1S2", 
"NumBadL1S2"
);

addSumAttributeToTemplate(
"level3overview", 
"level2overview", 
"NumBadL1S2", 
"NumBadL1S2"
);

addPolicyDependencyAttributeToTemplate(
"level1overview", 
"level1service3", 
"OverallAttribute", 
"NumBadL1S3", 
"PolicyAttribute_level1overview_NumBadL1S31", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addSumAttributeToTemplate(
"level2overview", 
"level1overview", 
"NumBadL1S3", 
"NumBadL1S3"
);

addSumAttributeToTemplate(
"level3overview", 
"level2overview", 
"NumBadL1S3", 
"NumBadL1S3"
);

addPolicyDependencyAttributeToTemplate(
"level2overview", 
"level1overview", 
"OverallAttribute", 
"NumBadL1", 
"PolicyAttribute_level2overview_NumBadL11", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addSumAttributeToTemplate(
"level3overview", 
"level2overview", 
"NumBadL1", 
"NumBadL1"
);

addPolicyDependencyAttributeToTemplate(
"level2overview", 
"level2service1", 
"OverallAttribute", 
"NumBadL2S1", 
"PolicyAttribute_level2overview_NumBadL2S1", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addSumAttributeToTemplate(
"level3overview", 
"level2overview", 
"NumBadL2S1", 
"NumBadL2S1"
);

addPolicyDependencyAttributeToTemplate(
"level2overview", 
"level2service2", 
"OverallAttribute", 
"NumBadL2S2", 
"PolicyAttribute_level2overview_NumBadL2S22", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addSumAttributeToTemplate(
"level3overview", 
"level2overview", 
"NumBadL2S2", 
"NumBadL2S2"
);

addPolicyDependencyAttributeToTemplate(
"level3overview", 
"level2overview", 
"OverallAttribute", 
"NumBadL2", 
"PolicyAttribute_level3overview_NumBadL22", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addSumAttributeToTemplate(
"level3overview", 
"level2overview", 
"NumBadL1S3", 
"NumBadL2S3"
);

addPolicyDependencyAttributeToTemplate(
"level3overview", 
"level3service4", 
"OverallAttribute", 
"NumBadL4S4", 
"PolicyAttribute_level3overview_NumBadL4S41", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Node", 
"BSM_NetworkService", 
"NodeNetworkServWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Node", 
"BSM_Service", 
"NodeServicesWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Node", 
"BSM_Node", 
"NodeToNodeServicesWorst", 
"Bad", 
"Marginal", 
true
);

addPercentageOfChildrenDependencyAttributeToTemplate(
"BSM_Node", 
"BSM_NetworkEntryPoint", 
"OperationStatus", 
"Bad", 
70, 
1, 
true, 
"", 
50
);

addPercentageOfChildrenDependencyAttributeToTemplate(
"BSM_Node", 
"BSM_NetworkEntryPoint", 
"NEPBad_Dependency", 
"Bad", 
99, 
99, 
true, 
"", 
50
);

addPercentageOfChildrenDependencyAttributeToTemplate(
"BSM_Node", 
"BSM_NetworkEntryPoint", 
"NEPMarginal_Dependency", 
"Marginal", 
70, 
30, 
true, 
"", 
50
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Application", 
"BSM_AppServer", 
"Business_AppServerDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Application", 
"BSM_ApplicationCluster", 
"Business_AppClusterDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Application", 
"BSM_Application", 
"Business_ApplicationDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Application", 
"BSM_DatabaseServer", 
"WorstDatabaseServer", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Application", 
"BSM_AppServerCluster", 
"AppServerClusterWorst", 
"Bad", 
"Marginal", 
true
);

addPercentageOfChildrenDependencyAttributeToTemplate(
"BSM_AppLogicalGrouping", 
"BSM_Application", 
"Business_Application_MarginalStatus", 
"Marginal", 
70, 
30, 
true, 
"", 
50
);

addPercentageOfChildrenDependencyAttributeToTemplate(
"BSM_AppLogicalGrouping", 
"BSM_Application", 
"Business_Application_BadStatus", 
"Marginal", 
70, 
30, 
true, 
"", 
50
);

addWorstChildDependencyAttributeToTemplate(
"BSM_AppServerGroup", 
"BSM_AppServer", 
"BSM_AppServerGroup_To_BSMAppServer", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_StorageSubsystem", 
"BSM_StorageVolume", 
"VolumeWorst", 
"Bad", 
"Marginal", 
true
);

addPolicyDependencyAttributeToTemplate(
"level4overview", 
"level3overview", 
"OverallAttribute", 
"NumBadL3", 
"PolicyAttribute_level4overview_NumBadL31", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addPolicyDependencyAttributeToTemplate(
"level2overview", 
"level2service3", 
"OverallAttribute", 
"NumBadL2S3", 
"PolicyAttribute_level2overview_NumBadL2S3", 
"/* NumberOfBadChildren */ENDLINEStatus = 0; // initialize Status varENDLINENumericAttributeFunctions.NumberOfBadChildren(ChildrenStatusArray, AllChildrenArray, ServiceInstance, Status);ENDLINE", 
"com.micromuse.response.common.parser.IPLPolicy", 
false
);

addWorstChildDependencyAttributeToTemplate(
"BSM_DatabaseServer", 
"BSM_Node", 
"NodeWorstStatus", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_DatabaseServer", 
"BSM_Database", 
"DatabaseWorstStatus", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Fabric", 
"BSM_FCSwitch", 
"FCSwitchWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_GenericTemplates", 
"BSM_BusinessService", 
"To_BusinessService", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_GenericTemplates", 
"BSM_DiscoveredNodes", 
"DependencyOnAllDiscoveredNodes", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_GenericTemplates", 
"BSM_DiscoveredAppServerClusters", 
"DependencyOnAllAppServerClusters", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_GenericTemplates", 
"BSM_NetworkTemplates", 
"DependencyOnNetworkTemplates", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_GenericTemplates", 
"BSM_Service", 
"DependencyServiceTemplates", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_GenericTemplates", 
"BSM_StorageTemplates", 
"DependencyOnStorageTemplates", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_GenericTemplates", 
"BSM_ClusterGroup", 
"DependencyOnClusterGrp", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessService", 
"BSM_Application", 
"Business_ApplicationDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessService", 
"BSM_ApplicationCluster", 
"Business_AppClusterDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessService", 
"BSM_AppLogicalGrouping", 
"Business_AppLogicalGroupingDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessService", 
"BSM_AppServer", 
"Business_AppServerDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessService", 
"BSM_BusinessService", 
"Business_BusinessServiceDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_BusinessService", 
"BSM_BusinessApplication", 
"Business_BusinessApplicationDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SOAProcess", 
"BSM_SOAOperationPort", 
"BSM_SOAProcesstoOperationDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_AppServer", 
"BSM_Node", 
"NodeBusinessStatus", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_AppServer", 
"BSM_AppServer", 
"AppServerBusinessStatus", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_Database", 
"BSM_TableSpace", 
"TableSpaceWorstDependency", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"SCR_ServiceComponentRawStatusTemplate", 
"SCR_ServiceComponentRawStatusTemplate", 
"DEP_Status_to_Status", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_ClusterGroup", 
"BSM_ServerCluster", 
"GrpServerClusterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_ClusterGroup", 
"BSM_AppServerCluster", 
"GrpAppServerClusterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_ClusterGroup", 
"BSM_ApplicationCluster", 
"GrpApplClusterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_DiscoveredAppServerClusters", 
"BSM_AppServerCluster", 
"AllAppServerClusterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_DiscoveredAppServerClusters", 
"BSM_ServerCluster", 
"ServerClusterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkEntryPoint", 
"BSM_NetworkRootCause", 
"NEP_To_RootCause", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_StorageTemplates", 
"BSM_StorageSubsystem", 
"StorageSubsystemWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_StorageTemplates", 
"BSM_Fabric", 
"FabricWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_SOAService", 
"BSM_SOAOperationPort", 
"BSM_SOAServicetoPort", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_NetworkElement", 
"NetworkTemplatesWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_Router", 
"NetworkTemplatesRouterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_Switch", 
"NetworkTemplatesSwitchWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_Bridge", 
"NetworkTemplatesBrigeWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_Firewall", 
"NetworkTemplatesFirewallWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_LoadBalancer", 
"NetworkTemplatesLoadBalancerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_Printer", 
"NetworkTemplatesPrinterWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_TerminalServer", 
"NetworkTemplatesTerminalServerWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_NetworkFabric", 
"NetworkTemplatesFabricWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_ServerBlade", 
"ServerBladeWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_ServerChassis", 
"ServerChassisWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_DNSService", 
"NetworkTemplatesServiceWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_LDAPService", 
"NetworkTemplatesLDAPWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_NFSService", 
"NetworkTemplatesNFSWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_SMBService", 
"NetworkTemplatesSMBWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_SMTPService", 
"NetworkTemplatesSMTPWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_NetworkTemplates", 
"BSM_DHCPService", 
"NetworkTemplatesDHCPWorst", 
"Bad", 
"Marginal", 
true
);

addWorstChildDependencyAttributeToTemplate(
"BSM_ServerCluster", 
"BSM_Node", 
"AppServerWorst", 
"Bad", 
"Marginal", 
true
);

