
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function generate_allattributestext_for_l3_serviceevent ( ServiceInstance, Instance, StatusText, ServiceText, NewStatus, StatusAttributesText, EnrichmentAttributesText) {
   StatusAttributesText = 
   RExtract(ServiceInstance.ServiceInstanceName,'(\w+)_L3O') + '|' +
   ServiceInstance.ServiceClassifier + '|' +   
   length(Instance.badl1s1) + '|' +   
   length(Instance.badl1s2) + '|' +   
   length(Instance.badl1s3) + '|' +   
   length(Instance.degrl1s1) + '|' +   
   length(Instance.degrl1s2) + '|' +   
   length(Instance.degrl1s3) + '|' +   
   int(Instance.NumL1S1) + '|' +  
   int(Instance.NumL1S2) + '|' +  
   int(Instance.NumL1S3) + '|' +  
   int(ServiceInstance.NumL2) + '|' +   
   int(Instance.L3S1Status) + '|' +   
   int(Instance.L3S2Status) + '|' +   
   int(Instance.L3S3Status) + '|' +  
   int(Instance.L3S4Status);
    
   EnrichmentAttributesText =  
   ServiceInstance.Access + '|' +
   ServiceInstance.Priority + '|' +
   ServiceInstance.GeoArea + '|' +
   ServiceInstance.GeoLocation + '|' +
   ServiceInstance.Region;
} 

/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function file_status_for_l3_serviceevent ( ServiceInstance, StatusText, ServiceText, NewStatus, StatusAttributesText, EnrichmentAttributesText) {


   now = getdate(); 
   
   millisec = JavaCall("java.lang.System",null,"currentTimeMillis",null)%1000;
   if (millisec < 10) {subsecond_string = ".00" + String(millisec) + "000"; }
   else { if (millisec < 100) {subsecond_string = ".0" + String(millisec) + "000"; }
   else {subsecond_string = "." + String(millisec) + "000";}}
   // log("subsecond_string=[" + subsecond_string + "]");
   nowts =  localtime(now,"yyyy-MM-dd HH:mm:ss") + subsecond_string;
   p_UPDATED_UNIX = now;
   p_UPDATED_SQL = nowts; 

   line2write = ""; 
   line2write =  
   StatusAttributesText + '|' + 
   StatusText + '|' +  
   ServiceText + '|' +  
   int(NewStatus) + '|' + 
   p_UPDATED_UNIX + '|' +  
   p_UPDATED_SQL + '|' +
   '0' + '|' +
   EnrichmentAttributesText 
   + '\n'; 

   log("L3_STATUS_LINE|"+line2write);
 
} 
 
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

function generate_statustext_for_l3_serviceevent (ServiceInstance, Instance, StatusText) {

  startstmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);   
   
NumL1S1 =  int(ServiceInstance.NumL1S1);
NumL1S2 =  int(ServiceInstance.NumL1S2);
NumL1S3 =  int(ServiceInstance.NumL1S3); 
 
 
BadL1S1 = length(Instance.badl1s1); DegrL1S1 = length(Instance.degrl1s1);  
BadL1S2 = length(Instance.badl1s2); DegrL1S2 = length(Instance.degrl1s2); 
BadL1S3 = length(Instance.badl1s3); DegrL1S3 = length(Instance.degrl1s3); 

GoodL1S1 = NumL1S1 - (BadL1S1 + DegrL1S1);
GoodL1S2 = NumL1S2 - (BadL1S2 + DegrL1S2);
GoodL1S3 = NumL1S3 - (BadL1S3 + DegrL1S3);

StatusL1S1Text =   " S1: " + BadL1S1 + "/" + DegrL1S1 + "/" + GoodL1S1 + " of "+ NumL1S1;
StatusL1S2Text =   " S2: " + BadL1S2 + "/" + DegrL1S2 + "/" + GoodL1S2 + " of "+ NumL1S2;
StatusL1S3Text =   " S3: " + BadL1S3 + "/" + DegrL1S3 + "/" + GoodL1S3 + " of "+ NumL1S3;

if (Instance.L3S1Status = 5) { StatusS1Text = "DOWN " ; } else { 
if (Instance.L3S1Status = 3) { StatusS1Text = "DEGR " ; } else { StatusS1Text = "UP " ; }
} 
if (Instance.L3S2Status = 5) { StatusS2Text = "DOWN " ; } else { 
if (Instance.L3S2Status = 3) { StatusS2Text = "DEGR " ; } else { StatusS2Text = "UP " ; }
} 
if (Instance.L3S3Status = 5) { StatusS3Text = "DOWN " ; } else { 
if (Instance.L3S3Status = 3) { StatusS3Text = "DEGR " ; } else { StatusS3Text = "UP " ; }
} 

if (ServiceInstance.ServiceClassifier = 'S1only') {
Status123Text = "S1:("+StatusS1Text+")";
}

if (ServiceInstance.ServiceClassifier = 'S2only') {
Status123Text = "S2:("+StatusS2Text+")";
}

if (ServiceInstance.ServiceClassifier = 'S3only') {
Status123Text = "S3:("+StatusS3Text+")";
} 


if (ServiceInstance.ServiceClassifier = 'S1S2') { 
Status123Text = "S1:("+StatusS1Text+") S2:("+StatusS2Text+")";
} 

if (ServiceInstance.ServiceClassifier = 'S1S3') { 
Status123Text = "S1:("+StatusS1Text+") S3:("+StatusS3Text+")";
} 


if (ServiceInstance.ServiceClassifier = 'S2S3') { 
Status123Text = "S2:("+StatusS2Text+") S3:("+StatusS3Text+")";
}

if (ServiceInstance.ServiceClassifier = 'S1S2S3') { 
Status123Text = "S1:("+StatusS1Text+") S2:("+StatusS2Text+") S3:("+StatusS3Text+")";
}

 
if (Instance.L3S4Status = 5) { StatusS4Text = "DOWN " ; } else { 
if (Instance.L3S4Status = 3) { StatusS4Text = "DEGR "  ; } else { StatusS4Text = "UP " ; }
}

if (Instance.L3S1Status = 5) { StatusS1Text = "DOWN " + StatusL1S1Text; } else { 
if (Instance.L3S1Status = 3) { StatusS1Text = "DEGR " + StatusL1S1Text; } else { StatusS1Text = "UP " + StatusL1S1Text; }
}

if (Instance.L3S2Status = 5) { StatusS2Text = "DOWN " + StatusL1S2Text; } else { 
if (Instance.L3S2Status = 3) { StatusS2Text = "DEGR " + StatusL1S2Text; } else { StatusS2Text = "UP " + StatusL1S2Text; }
}

if (Instance.L3S3Status = 5) { StatusS3Text = "DOWN " + StatusL1S3Text; } else { 
if (Instance.L3S3Status = 3) { StatusS3Text = "DEGR " + StatusL1S3Text; } else { StatusS3Text = "UP " + StatusL1S3Text; }
}


StatusText = "L3: " + ServiceInstance.ServiceClassifier + " : " + RExtract(ServiceInstance.ServiceInstanceName,'(\w+)_L3O') + " S4(" + StatusS4Text + ") S1(" + StatusS1Text + ") S2(" + StatusS2Text + ") S3(" + StatusS3Text + ") " + Status123Text;
  

}
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function generate_servicetext_for_l3_serviceevent ( Instance, ServiceText) {
 startstmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);
 
L3S1Status = Instance.L3S1Status;
L3S2Status = Instance.L3S2Status;
L3S3Status = Instance.L3S3Status;

if ((L3S1Status = 5) AND (L3S2Status = 5) AND (L3S3Status = 5)) { ServiceText = "ALL SERVICES DOWN"; }
if ((L3S1Status = 5) AND (L3S2Status = 5) AND (L3S3Status = 3)) { ServiceText = "S1 and S2 SERVICES DOWN, S3 SERVICES REDUCED"; }
if ((L3S1Status = 5) AND (L3S2Status = 5) AND (L3S3Status = 0)) { ServiceText = "S1 and S2 SERVICES DOWN, S3 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 3) AND (L3S3Status = 5)) { ServiceText = "S1 and S3 SERVICES DOWN, S2 SERVICES REDUCED"; }
if ((L3S1Status = 5) AND (L3S2Status = 3) AND (L3S3Status = 3)) { ServiceText = "S1 SERVICES DOWN, S3 and S2 SERVICES REDUCED"; }
if ((L3S1Status = 5) AND (L3S2Status = 3) AND (L3S3Status = 0)) { ServiceText = "S1 SERVICES DOWN, S2 SERVICES REDUCED, S3 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 0) AND (L3S3Status = 5)) { ServiceText = "S1 and S3 SERVICES DOWN, S2 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 0) AND (L3S3Status = 3)) { ServiceText = "S1 SERVICES DOWN, S3 SERVICES REDUCED, S2 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 0) AND (L3S3Status = 0)) { ServiceText = "S1 SERVICES DOWN, S3 and S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 5) AND (L3S3Status = 5)) { ServiceText = "S3 and S2 SERVICES DOWN, S1 SERVICES REDUCED"; }
if ((L3S1Status = 3) AND (L3S2Status = 5) AND (L3S3Status = 3)) { ServiceText = "S2 SERVICES DOWN, S3 and S1 SERVICES REDUCED"; }
if ((L3S1Status = 3) AND (L3S2Status = 5) AND (L3S3Status = 0)) { ServiceText = "S2 SERVICES DOWN, S1 SERVICES REDUCED, S3 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 3) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S1 and S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 3) AND (L3S3Status = 3)) { ServiceText = "ALL SERVICES REDUCED"; }
if ((L3S1Status = 3) AND (L3S2Status = 3) AND (L3S3Status = 0)) { ServiceText = "S1 and S2 SERVICES REDUCED, S3 SERVICES UP "; }
if ((L3S1Status = 3) AND (L3S2Status = 0) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S1 SERVICES REDUCED, S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 0) AND (L3S3Status = 3)) { ServiceText = "S1 and S3 SERVICES REDUCED, S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 0) AND (L3S3Status = 0)) { ServiceText = "S1 SERVICES REDUCED, S3 and S2 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 5) AND (L3S3Status = 5)) { ServiceText = "S3 and S2 SERVICES DOWN, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 5) AND (L3S3Status = 3)) { ServiceText = "S2 SERVICES DOWN, S3 SERVICES REDUCED, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 5) AND (L3S3Status = 0)) { ServiceText = "S2 SERVICES DOWN, S1 and S3 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 3) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S2 SERVICES UP, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 3) AND (L3S3Status = 3)) { ServiceText = "S3 and S2 SERVICES REDUCED, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 3) AND (L3S3Status = 0)) { ServiceText = "S2 SERVICES REDUCED, S3 and S1 SERVICES UP "; }
if ((L3S1Status = 0) AND (L3S2Status = 0) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S1 and S2 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 0) AND (L3S3Status = 3)) { ServiceText = "S3 SERVICES REDUCED, S1 and S2 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 0) AND (L3S3Status = 0)) { ServiceText = "S1S2S3 SERVICES UP"; }

if (Instance.L3S4Status = 5) { ServiceText = "S4 DOWN, " + ServiceText;}
if (Instance.L3S4Status = 3) { ServiceText = "S4 DEGRADED, " + ServiceText;}
if (Instance.L3S4Status = 0) { ServiceText = "S4 UP, " + ServiceText;}
endstmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);  
     durstmilli = endstmilli - startstmilli; 
//   log("Generating servicetext took [" + durstmilli +
//         "ms] for " + ServiceInstance.ServiceInstanceName);
 
}

/*---------------------------------------------------------------------------------*/

function update_text_for_l3_omnibus_serviceevent(objectname, SummaryText, ServiceText) {

 startevmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);  
    
 DataType = "ObjectServer";
 Filter = "Class = 12000 and RAD_ServiceName = '" + objectname + "'";
 CountOnly = False;

 EventRows = GetByFilter(DataType, Filter, CountOnly);
 EventCount = Num;
 if (EventCount != 1) {
  log("Updatetext DB Error : Filter = " + Filter); 
  log("Updatetext DB Error : Find Object Server Event for subsequent update " + objectname +   " : RowsReturned = " + EventCount);
 } 
  else {
     
    EventRow = EventRows[0];
    EventRow.Summary = SummaryText;
    EventRow.AlertKey = StatusText;
    EventRow.Service = ServiceText;
    EventRow.RAD_SeenByImpact = 0;
  }  
  endevmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null); 
  durevmilli = endevmilli - startevmilli; 
//  log("Processing Omnibus event update took [" + durevmilli + "ms] for " + objectname);  
}
