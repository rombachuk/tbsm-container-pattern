
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function generate_allattributestext_for_l3_serviceevent ( ServiceInstance, Instance, StatusText, ServiceText, NewStatus, StatusAttributesText, EnrichmentAttributesText) {
   StatusAttributesText = 
   RExtract(ServiceInstance.ServiceInstanceName,'(\w+)_L3O') + '|' +
   ServiceInstance.ServiceClassifier + '|' +   
   length(Instance.badd1l1s1) + '|' +   
   length(Instance.badd1l1s2) + '|' +   
   length(Instance.badd1l1) + '|' +   
   length(Instance.degrd1l1s1) + '|' +   
   length(Instance.degrd1l1s2) + '|' +   
   length(Instance.degrd1l1) + '|' +   
   length(Instance.badd2l1s1) + '|' +   
   length(Instance.badd2l1s2) + '|' +   
   length(Instance.badd2l1) + '|' +   
   length(Instance.degrd2l1s1) + '|' +   
   length(Instance.degrd2l1s2) + '|' +   
   length(Instance.degrd2l1) + '|' +   
   length(Instance.badd3l1s1) + '|' +   
   length(Instance.badd3l1s2) + '|' +   
   length(Instance.badd3l1) + '|' +   
   length(Instance.degrd3l1s1) + '|' +   
   length(Instance.degrd3l1s2) + '|' +   
   length(Instance.degrd3l1) + '|' +   
   length(Instance.badd4l2s2) + '|' +   
   length(Instance.badd4l2s3) + '|' +   
   length(Instance.badd3l1) + '|' +   
   length(Instance.degrd4l2s3) + '|' +   
   length(Instance.degrd4l2s3) + '|' +   
   length(Instance.degrd4l2) + '|' +   
   int(length(Instance.d1data)) + '|' +  
   int(length(Instance.d2data)) + '|' +  
   int(length(Instance.d3data)) + '|' +  
   int(length(Instance.d4data)) + '|' +  
   int(Instance.D1Status) + '|' +   
   int(Instance.D2Status) + '|' +   
   int(Instance.D3Status) + '|' +  
   int(Instance.D4Status) + '|' +
   int(Instance.S1Status) + '|' +   
   int(Instance.S2Status) + '|' +   
   int(Instance.S3Status) + '|' +  
   int(Instance.S4Status);
    
   EnrichmentAttributesText =  
   ServiceInstance.Access + '|' +
   ServiceInstance.Priority + '|' +
   ServiceInstance.GeoArea + '|' +
   ServiceInstance.GeoLocation + '|' +
   ServiceInstance.Region;
} 

/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function file_status_for_l3_serviceevent ( ServiceInstance, StatusText, ServiceText, NewStatus, StatusAttributesText, EnrichmentAttributesText) {


   now = getdate(); 
   
   millisec = JavaCall("java.lang.System",null,"currentTimeMillis",null)%1000;
   if (millisec < 10) {subsecond_string = ".00" + String(millisec) + "000"; }
   else { if (millisec < 100) {subsecond_string = ".0" + String(millisec) + "000"; }
   else {subsecond_string = "." + String(millisec) + "000";}}
   // log("subsecond_string=[" + subsecond_string + "]");
   nowts =  localtime(now,"yyyy-MM-dd HH:mm:ss") + subsecond_string;
   p_UPDATED_UNIX = now;
   p_UPDATED_SQL = nowts; 

   line2write = ""; 
   line2write =  
   StatusAttributesText + '|' + 
   StatusText + '|' +  
   ServiceText + '|' +  
   int(NewStatus) + '|' + 
   p_UPDATED_UNIX + '|' +  
   p_UPDATED_SQL + '|' +
   '0' + '|' +
   EnrichmentAttributesText 
   + '\n'; 

   log("L3_STATUS_LINE|"+line2write);
 
} 
 
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

function generate_statustext_for_l3_serviceevent (ServiceInstance, Instance, StatusText) {

  startstmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);   
   
NumD1L1 =  length(Instance.d1data);
NumD2L1 =  length(Instance.d2data);
NumD3L1 =  length(Instance.d3data);
NumD4L2 =  length(Instance.d4data);
 
 
BadD1L1S1 = length(Instance.badd1l1s1); DegrD1L1S1 = length(Instance.degrd1l1s1);  
BadD1L1S2 = length(Instance.badd1l1s2); DegrD1L1S2 = length(Instance.degrd1l1s2); 
BadD2L1S1 = length(Instance.badd2l1s1); DegrD2L1S1 = length(Instance.degrd2l1s1);  
BadD2L1S2 = length(Instance.badd2l1s2); DegrD2L1S2 = length(Instance.degrd2l1s2); 
BadD3L1S1 = length(Instance.badd3l1s1); DegrD3L1S1 = length(Instance.degrd3l1s1);  
BadD3L1S2 = length(Instance.badd3l1s2); DegrD3L1S2 = length(Instance.degrd3l1s2); 
GoodD1L1S1 = NumD1L1 - (BadD1L1S1 + DegrD1L1S1);
GoodD1L1S2 = NumD1L1 - (BadD1L1S2 + DegrD1L1S2);
GoodD2L1S1 = NumD2L1 - (BadD2L1S1 + DegrD2L1S1);
GoodD2L1S2 = NumD2L1 - (BadD2L1S2 + DegrD2L1S2);
GoodD3L1S1 = NumD3L1 - (BadD3L1S1 + DegrD3L1S1);
GoodD3L1S2 = NumD3L1 - (BadD3L1S2 + DegrD3L1S2);

StatusD1S1Text =   " D1: " + BadD1L1S1 + "/" + DegrD1L1S1 + "/" + GoodD1L1S1 + " of "+ NumD1L1;
StatusD2S1Text =   " D2: " + BadD2L1S1 + "/" + DegrD2L1S1 + "/" + GoodD2L1S1 + " of "+ NumD2L1;
StatusD3S1Text =   " D3: " + BadD3L1S1 + "/" + DegrD3L1S1 + "/" + GoodD3L1S1 + " of "+ NumD3L1;
StatusD1S2Text =   " D1: " + BadD1L1S2 + "/" + DegrD1L1S2 + "/" + GoodD1L1S2 + " of "+ NumD1L1;
StatusD2S2Text =   " D2: " + BadD2L1S2 + "/" + DegrD2L1S2 + "/" + GoodD2L1S2 + " of "+ NumD2L1;
StatusD3S2Text =   " D3: " + BadD3L1S2 + "/" + DegrD3L1S2 + "/" + GoodD3L1S2 + " of "+ NumD3L1;

if (Instance.S1Status = 5) { StatusS1Text = "DOWN " ; } else { 
if (Instance.S1Status = 3) { StatusS1Text = "DEGR " ; } else { StatusS1Text = "UP " ; } } 
if (Instance.S2Status = 5) { StatusS2Text = "DOWN " ; } else { 
if (Instance.S2Status = 3) { StatusS2Text = "DEGR " ; } else { StatusS2Text = "UP " ; } } 

if (ServiceInstance.ServiceClassifier = 'D1only') {
Status123Text = "S1:"+StatusS1Text+" ("+StatusD1S1Text+")";
}


if (ServiceInstance.ServiceClassifier = 'D1D2D3') { 
Status123Text = "S1:"+StatusS1Text+"("+StatusD1S1Text+StatusD2S1Text+StatusD3S1Text+") S2:" + StatusS2Text+"("+StatusD1S2Text+StatusD2S2Text+StatusD3S2Text+")";
}

 
if (Instance.S4Status = 5) { StatusS4Text = "DOWN" ; } 
else { if (Instance.S4Status = 3) { StatusS4Text = "DEGR"  ; } else { StatusS4Text = "UP" ; } }
if (Instance.D1Status = 5) { StatusD1Text = "DOWN" ; } 
else { if (Instance.D1Status = 3) { StatusD1Text = "DEGR"  ; } else { StatusD1Text = "UP" ; } }
if (Instance.D2Status = 5) { StatusD2Text = "DOWN" ; } 
else { if (Instance.D2Status = 3) { StatusD2Text = "DEGR"  ; } else { StatusD2Text = "UP" ; } }
if (Instance.D3Status = 5) { StatusD3Text = "DOWN" ; } 
else { if (Instance.D3Status = 3) { StatusD3Text = "DEGR"  ; } else { StatusD3Text = "UP" ; } }
if (Instance.D4Status = 5) { StatusD4Text = "DOWN" ; } 
else { if (Instance.D4Status = 3) { StatusD4Text = "DEGR"  ; } else { StatusD4Text = "UP" ; } }


StatusText = "L3: " + ServiceInstance.ServiceClassifier + " : " + RExtract(ServiceInstance.ServiceInstanceName,'(\w+)_L3O') + " D4(" + StatusD4Text + ") D1(" + StatusD1Text + ") D2(" + StatusD2Text + ") D3(" + StatusD3Text + ") " + Status123Text;
  

}
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function generate_servicetext_for_l3_serviceevent ( Instance, ServiceText) {
 startstmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);
 
L3S1Status = Instance.S1Status;
L3S2Status = Instance.S2Status;
L3S3Status = Instance.S3Status;

if ((L3S1Status = 5) AND (L3S2Status = 5) AND (L3S3Status = 5)) { ServiceText = "ALL SERVICES DOWN"; }
if ((L3S1Status = 5) AND (L3S2Status = 5) AND (L3S3Status = 3)) { ServiceText = "S1 and S2 SERVICES DOWN, S3 SERVICES REDUCED"; }
if ((L3S1Status = 5) AND (L3S2Status = 5) AND (L3S3Status = 0)) { ServiceText = "S1 and S2 SERVICES DOWN, S3 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 3) AND (L3S3Status = 5)) { ServiceText = "S1 and S3 SERVICES DOWN, S2 SERVICES REDUCED"; }
if ((L3S1Status = 5) AND (L3S2Status = 3) AND (L3S3Status = 3)) { ServiceText = "S1 SERVICES DOWN, S3 and S2 SERVICES REDUCED"; }
if ((L3S1Status = 5) AND (L3S2Status = 3) AND (L3S3Status = 0)) { ServiceText = "S1 SERVICES DOWN, S2 SERVICES REDUCED, S3 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 0) AND (L3S3Status = 5)) { ServiceText = "S1 and S3 SERVICES DOWN, S2 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 0) AND (L3S3Status = 3)) { ServiceText = "S1 SERVICES DOWN, S3 SERVICES REDUCED, S2 SERVICES UP"; }
if ((L3S1Status = 5) AND (L3S2Status = 0) AND (L3S3Status = 0)) { ServiceText = "S1 SERVICES DOWN, S3 and S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 5) AND (L3S3Status = 5)) { ServiceText = "S3 and S2 SERVICES DOWN, S1 SERVICES REDUCED"; }
if ((L3S1Status = 3) AND (L3S2Status = 5) AND (L3S3Status = 3)) { ServiceText = "S2 SERVICES DOWN, S3 and S1 SERVICES REDUCED"; }
if ((L3S1Status = 3) AND (L3S2Status = 5) AND (L3S3Status = 0)) { ServiceText = "S2 SERVICES DOWN, S1 SERVICES REDUCED, S3 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 3) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S1 and S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 3) AND (L3S3Status = 3)) { ServiceText = "ALL SERVICES REDUCED"; }
if ((L3S1Status = 3) AND (L3S2Status = 3) AND (L3S3Status = 0)) { ServiceText = "S1 and S2 SERVICES REDUCED, S3 SERVICES UP "; }
if ((L3S1Status = 3) AND (L3S2Status = 0) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S1 SERVICES REDUCED, S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 0) AND (L3S3Status = 3)) { ServiceText = "S1 and S3 SERVICES REDUCED, S2 SERVICES UP"; }
if ((L3S1Status = 3) AND (L3S2Status = 0) AND (L3S3Status = 0)) { ServiceText = "S1 SERVICES REDUCED, S3 and S2 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 5) AND (L3S3Status = 5)) { ServiceText = "S3 and S2 SERVICES DOWN, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 5) AND (L3S3Status = 3)) { ServiceText = "S2 SERVICES DOWN, S3 SERVICES REDUCED, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 5) AND (L3S3Status = 0)) { ServiceText = "S2 SERVICES DOWN, S1 and S3 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 3) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S2 SERVICES UP, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 3) AND (L3S3Status = 3)) { ServiceText = "S3 and S2 SERVICES REDUCED, S1 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 3) AND (L3S3Status = 0)) { ServiceText = "S2 SERVICES REDUCED, S3 and S1 SERVICES UP "; }
if ((L3S1Status = 0) AND (L3S2Status = 0) AND (L3S3Status = 5)) { ServiceText = "S3 SERVICES DOWN, S1 and S2 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 0) AND (L3S3Status = 3)) { ServiceText = "S3 SERVICES REDUCED, S1 and S2 SERVICES UP"; }
if ((L3S1Status = 0) AND (L3S2Status = 0) AND (L3S3Status = 0)) { ServiceText = "S1S2S3 SERVICES UP"; }

if (Instance.L3S4Status = 5) { ServiceText = "S4 DOWN, " + ServiceText;}
if (Instance.L3S4Status = 3) { ServiceText = "S4 DEGRADED, " + ServiceText;}
if (Instance.L3S4Status = 0) { ServiceText = "S4 UP, " + ServiceText;}
endstmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);  
     durstmilli = endstmilli - startstmilli; 
//   log("Generating servicetext took [" + durstmilli +
//         "ms] for " + ServiceInstance.ServiceInstanceName);
 
}

/*---------------------------------------------------------------------------------*/

function update_text_for_l3_omnibus_serviceevent(objectname, SummaryText, ServiceText) {

 startevmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null);  
    
 DataType = "ObjectServer";
 Filter = "Class = 12000 and RAD_ServiceName = '" + objectname + "'";
 CountOnly = False;

 EventRows = GetByFilter(DataType, Filter, CountOnly);
 EventCount = Num;
 if (EventCount != 1) {
  log("Updatetext DB Error : Filter = " + Filter); 
  log("Updatetext DB Error : Find Object Server Event for subsequent update " + objectname +   " : RowsReturned = " + EventCount);
 } 
  else {
     
    EventRow = EventRows[0];
    EventRow.Summary = SummaryText;
    EventRow.AlertKey = StatusText;
    EventRow.Service = ServiceText;
    EventRow.RAD_SeenByImpact = 0;
  }  
  endevmilli = JavaCall("java.lang.System",null,"currentTimeMillis",null); 
  durevmilli = endevmilli - startevmilli; 
//  log("Processing Omnibus event update took [" + durevmilli + "ms] for " + objectname);  
}
